"""
1. Отсортируйте по убыванию методом "пузырька" одномерный целочисленный массив,
заданный случайными числами на промежутке [-100; 100). Выведите на экран
исходный и отсортированный массивы. Сортировка должна быть реализована в
виде функции. По возможности доработайте алгоритм (сделайте его умнее).
"""

from random import randint


def bubble_sort(my_list):
    """
    Функция сортировки методом "пузырька" в
    обратном порятке, т.е. от большего к меньшему
    :param my_list: Исходный массив
    :return: Выводит отсортированный результат
    """
    for i, _ in enumerate(my_list):
        for j, _ in enumerate(my_list):
            if my_list[i] > my_list[j]:
                my_list[j], my_list[i] = my_list[i], my_list[j]

    return my_list


IN_LIST = [randint(-100, 100) for i in range(30)]

print(IN_LIST)
print(bubble_sort(IN_LIST))

# Результат
# [26, 42, 36, 63, 43, 50, -37, 93, -7, -53, -99, -67, -26, 53, 41, 28, 5, -9......]
# [93, 63, 53, 53, 50, 43, 42, 41, 36, 28, 26, 6, 5, -1, -7, -9, -11, -26, -36......]
